<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a2" title="">
  <file path="Response.php" hash="2952ee89c8ed2f04cb07bea71957bb36" package="Default">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file Response.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="nx\core" line="12" package="Default">
      <name>Response</name>
      <full_name>\nx\core\Response</full_name>
      <extends/>
      <docblock line="5">
        <description><![CDATA[The Response class is used to render an HTTP response.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Nick Sinopoli &lt;NSinopoli@gmail.com&gt;"/>
        <tag line="5" name="copyright" description="2011-2012 Nick Sinopoli"/>
        <tag line="5" name="license" description="http://opensource.org/licenses/BSD-3-Clause The BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" package="Default">
        <name>$_config</name>
        <default><![CDATA[array()]]></default>
        <docblock line="14">
          <description><![CDATA[The configuration settings.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" package="Default">
        <name>$_statuses</name>
        <default><![CDATA[array(
        100 => 'Continue',
        101 => 'Switching Protocols',
        200 => 'OK',
        201 => 'Created',
        202 => 'Accepted',
        203 => 'Non-Authoritative Information',
        204 => 'No Content',
        205 => 'Reset Content',
        206 => 'Partial Content',
        300 => 'Multiple Choices',
        301 => 'Moved Permanently',
        302 => 'Found',
        303 => 'See Other',
        304 => 'Not Modified',
        305 => 'Use Proxy',
        307 => 'Temporary Redirect',
        400 => 'Bad Request',
        401 => 'Unauthorized',
        402 => 'Payment Required',
        403 => 'Forbidden',
        404 => 'Not Found',
        405 => 'Method Not Allowed',
        406 => 'Not Acceptable',
        407 => 'Proxy Authentication Required',
        408 => 'Request Time-out',
        409 => 'Conflict',
        410 => 'Gone',
        411 => 'Length Required',
        412 => 'Precondition Failed',
        413 => 'Request Entity Too Large',
        414 => 'Request-URI Too Large',
        415 => 'Unsupported Media Type',
        416 => 'Requested range not satisfiable',
        417 => 'Expectation Failed',
        500 => 'Internal Server Error',
        501 => 'Not Implemented',
        502 => 'Bad Gateway',
        503 => 'Service Unavailable',
        504 => 'Gateway Time-out'
    )]]></default>
        <docblock line="21">
          <description><![CDATA[The HTTP status codes.]]></description>
          <long-description><![CDATA[<p>@var array</p>]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="78" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Sets the configuration options.]]></description>
          <long-description><![CDATA[<p>Possible keys include the following:</p>

<ul>
<li>'buffer_size' - The number of bytes each chunk of output should contain</li>
</ul>]]></long-description>
          <tag line="68" name="param" description="The configuration options." type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$config</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="nx\core" line="91" package="">
        <name>_convert_status</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[Converts an integer status to a well-formed HTTP status header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="The integer associated with the HTTP status." type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="85" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="nx\core" line="110" package="">
        <name>_parse</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Parses a response.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="The response to be parsed. Can be an array containing 'body', 'headers', and/or 'status' keys, or a string which will be used as the body of the response. Note that the headers must be well-formed HTTP headers, and the status must be an integer (i.e., the one associated with the HTTP status code)." type="mixed" variable="$response">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="98" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="142" package="">
        <name>render</name>
        <type>function</type>
        <docblock line="128">
          <description><![CDATA[Renders a response.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="128" name="param" description="The response to be rendered. Can be an array containing 'body', 'headers', and/or 'status' keys, or a string which will be used as the body of the response. Note that the headers must be well-formed HTTP headers, and the status must be an integer (i.e., the one associated with the HTTP status code). The response body is chunked according to the buffer_size set in the constructor." type="mixed" variable="$response">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Dispatcher.php" hash="9e2d9172d57962fb26ddf96a48dbd80e" package="Default">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file Dispatcher.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="nx\core" line="12" package="Default">
      <name>Dispatcher</name>
      <full_name>\nx\core\Dispatcher</full_name>
      <extends/>
      <docblock line="5">
        <description><![CDATA[The Dispatcher handles incoming HTTP requests and sends back responses.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Nick Sinopoli &lt;NSinopoli@gmail.com&gt;"/>
        <tag line="5" name="copyright" description="2011-2012 Nick Sinopoli"/>
        <tag line="5" name="license" description="http://opensource.org/licenses/BSD-3-Clause The BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" package="Default">
        <name>$_config</name>
        <default><![CDATA[array()]]></default>
        <docblock line="14">
          <description><![CDATA[The configuration settings.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="14" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="27" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="21">
          <description><![CDATA[Sets the configuration options for the dispatcher.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="21" name="param" description="The configuration options." type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$config</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="45" package="">
        <name>handle</name>
        <type>function</type>
        <docblock line="37">
          <description><![CDATA[Matches an incoming request with the supplied routes, calls the
callback associated with the matched route, and sends a response.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="param" description="The incoming request object." type="object" variable="$request">
            <type by_reference="false">object</type>
          </tag>
          <tag line="37" name="param" description="The routes." type="array" variable="$routes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$routes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Router.php" hash="b358bf231ae4c28594f2f3da0ceb0365" package="Default">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file Router.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="nx\core" line="12" package="Default">
      <name>Router</name>
      <full_name>\nx\core\Router</full_name>
      <extends/>
      <docblock line="5">
        <description><![CDATA[The Router is used to handle url routing.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Nick Sinopoli &lt;NSinopoli@gmail.com&gt;"/>
        <tag line="5" name="copyright" description="2011-2012 Nick Sinopoli"/>
        <tag line="5" name="license" description="http://opensource.org/licenses/BSD-3-Clause The BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="nx\core" line="20" package="">
        <name>_compile_regex</name>
        <type>function</type>
        <docblock line="14">
          <description><![CDATA[Compiles the regex necessary to capture all match types within a route.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="14" name="param" description="The route." type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="119" package="">
        <name>parse</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Parses the supplied request uri based on the supplied routes and
the request method.]]></description>
          <long-description><![CDATA[<p>Routes should be of the following format:</p>

<pre><code>$routes = array(
    array(
        mixed $request_method, string $request_uri, callable $callback
    ),
    ...
);
</code></pre>

<p>where:</p>

<pre><code>$request_method can be a string ('GET', 'POST', 'PUT', 'DELETE'),
or an array (e.g., array('GET, 'POST')).  Note that $request_method
is case-insensitive.
</code></pre>

<pre><code>$request_uri is a string, with optional match types.  Valid match types
are as follows:

[i] - integer
[a] - alphanumeric
[h] - hexadecimal
[*] - anything

Match types can be combined with parameter names, which will be
captured:

[i:id] - will match an integer, storing it within the returned 'params'
array under the 'id' key
[a:name] - will match an alphanumeric value, storing it within the
returned 'params' array under the 'name' key

Here are some examples to help illustrate:

/post/[i:id] - will match on /post/32 (with the returned 'params' array
containing an 'id' key with a value of 32), but will not match on
/post/today

/find/[h:serial] - will match on /find/ae32 (with the returned 'params'
array containing a 'serial' key will a value of 'ae32'), but will not
match on /find/john
</code></pre>

<pre><code>$callback is a valid callback function.
</code></pre>

<p>Returns an array containing the following keys:</p>

<ul>
<li>'params'   - The parameters collected from the matched uri</li>
<li>'callback' - The callback function pulled from the matched route</li>
</ul>]]></long-description>
          <tag line="54" name="param" description="The request uri." type="string" variable="$request_uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="The request method." type="string" variable="$request_method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="The routes." type="array" variable="$routes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="54" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$request_uri</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$request_method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$routes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Request.php" hash="08377dace96cee91012b2c247a83c86e" package="Default">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file Request.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="nx\core" line="13" package="Default">
      <name>Request</name>
      <full_name>\nx\core\Request</full_name>
      <extends/>
      <docblock line="5">
        <description><![CDATA[The Request class is used to handle all data pertaining to an incoming HTTP
request.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Nick Sinopoli &lt;NSinopoli@gmail.com&gt;"/>
        <tag line="5" name="copyright" description="2011-2012 Nick Sinopoli"/>
        <tag line="5" name="license" description="http://opensource.org/licenses/BSD-3-Clause The BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="20" package="Default">
        <name>$data</name>
        <default><![CDATA[array()]]></default>
        <docblock line="15">
          <description><![CDATA[The POST/PUT/DELETE data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$_env</name>
        <default><![CDATA[array()]]></default>
        <docblock line="22">
          <description><![CDATA[The environment variables.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="34" package="Default">
        <name>$query</name>
        <default><![CDATA[array()]]></default>
        <docblock line="29">
          <description><![CDATA[The GET data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" package="Default">
        <name>$params</name>
        <default><![CDATA[]]></default>
        <docblock line="36">
          <description><![CDATA[The parameters parsed from the request url.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" package="Default">
        <name>$url</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[The url of the request.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="62" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Sets the configuration options.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="The configuration options. Possible keys include: 'data' - the POST/PUT/DELETE data 'query' - the GET data TODO: Include other options? TODO: Write up documentation about value of injecting these" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$config</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="132" package="">
        <name>__get</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Returns an environment variable.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="param" description="The environment variable." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="nx\core" line="179" package="">
        <name>is</name>
        <type>function</type>
        <docblock line="137">
          <description><![CDATA[Checks for request characteristics.]]></description>
          <long-description><![CDATA[<p>The full list of request characteristics is as follows:</p>

<ul>
<li>'ajax' - XHR</li>
<li>'delete' - DELETE REQUEST_METHOD</li>
<li>'flash' - "Shockwave Flash" HTTP_USER_AGENT</li>
<li>'get' - GET REQUEST_METHOD</li>
<li>'head' - HEAD REQUEST_METHOD</li>
<li>'mobile'  - any one of the following HTTP_USER_AGENTS:</li>
</ul>

<ol>
<li>'Android'</li>
<li>'AvantGo'</li>
<li>'Blackberry'</li>
<li>'DoCoMo'</li>
<li>'iPod'</li>
<li>'iPhone'</li>
<li>'J2ME'</li>
<li>'NetFront'</li>
<li>'Nokia'</li>
<li>'MIDP'</li>
<li>'Opera Mini'</li>
<li>'PalmOS'</li>
<li>'PalmSource'</li>
<li>'Plucker'</li>
<li>'portalmmm'</li>
<li>'ReqwirelessWeb'</li>
<li>'SonyEricsson'</li>
<li>'Symbian'</li>
<li>'UP.Browser'</li>
<li>'Windows CE'</li>
<li>'Xiino'</li>
</ol>

<ul>
<li>'options' - OPTIONS REQUEST_METHOD</li>
<li>'post'    - POST REQUEST_METHOD</li>
<li>'put'     - PUT REQUEST_METHOD</li>
<li>'ssl'     - HTTPS</li>
</ul>]]></long-description>
          <tag line="137" name="param" description="The characteristic." type="string" variable="$characteristic">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$characteristic</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="" full_name=""/>
  <package name="Default" full_name="Default"/>
  <namespace name="nx" full_name="nx">
    <namespace name="core" full_name="nx\core"/>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
